version: 2.1
executors:
  python3-7:
    docker:
      - image: circleci/python:3.7.9-browsers
  python3-8:
    docker:
      - image: circleci/python:3.8.7-browsers
  python3-9:
    docker:
      - image: circleci/python:3.9.1-browsers
      
commands:
  run-full-suite:
    steps:
      - checkout:
          name: Checkout Branch

      - run:
          name: Save job name
          command: |
              echo $CIRCLE_JOB >> /tmp/job_info.txt

      # Download and cache dependencies
      - restore_cache:
          name: Save time by restoring cache
          keys:
            - v5-dependencies-{{ checksum "/tmp/job_info.txt" }}-{{ checksum "requirements/development.txt" }}
            # fallback to using the latest cache if no exact match is found
            - v5-dependencies-{{ checksum "/tmp/job_info.txt" }}

      - run:
          name: Install dependencies
          command: |
            # Ensure that we are isolating for testing
            # (save confusion/conflicts between system and 
            #  /usr/local/lib/python3.8/site-packages)
            /usr/local/bin/python3 -m venv $CIRCLE_WORKING_DIRECTORY/venv
            source $CIRCLE_WORKING_DIRECTORY/venv/bin/activate

            # Ensure Pip and Poetry bootstrap at latest version
            $CIRCLE_WORKING_DIRECTORY/venv/bin/python3 -m pip install --upgrade pip
            $CIRCLE_WORKING_DIRECTORY/venv/bin/python3 -m pip install poetry

            # Trust poetry to get all the requirements correct
            $CIRCLE_WORKING_DIRECTORY/venv/bin/poetry install

      - run:
          name: Run tests
          command: |
            source $CIRCLE_WORKING_DIRECTORY/venv/bin/activate
            $CIRCLE_WORKING_DIRECTORY/venv/bin/poetry run python tests/test_github_commit_status.py

      - save_cache:
          name: Save time in future tests by saving cache
          paths:
            - $CIRCLE_WORKING_DIRECTORY/venv
          key: v5-dependencies-{{ checksum "/tmp/job_info.txt" }}-{{ checksum "requirements/development.txt" }}

jobs:
  test-3-7:
    executor: python3-7
    working_directory: ~/repo3_7
    steps:
      - run-full-suite
  test-3-8:
    executor: python3-8
    working_directory: ~/repo3_8
    steps:
      - run-full-suite
  test-3-9:
    executor: python3-9
    working_directory: ~/repo3_9
    steps:
      - run-full-suite

workflows:
  full-suite-workflow:
    jobs:
      - test-3-9
      - test-3-8
      - test-3-7

